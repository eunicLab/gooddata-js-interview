{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","defaultValue","defaultYear","defaultChart","ColumnChart","handleMonth","bind","assertThisInitialized","handleYear","handleChart","event","value","target","setState","BarChart","AreaChart","absoluteDateFilter","dataSet","uri","from","to","measure","localIdentifier","definition","measureDefinition","item","alias","visualizationAttribute","displayForm","react_default","a","createElement","onChange","className","projectId","filters","getMonthFilter","measures","getMeasures","viewBy","getViewBy","renderDropdown","renderYear","renderChartType","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.71721fc6.chunk.js","sourcesContent":["// Copyright (C) 2007-2019, GoodData(R) Corporation. All rights reserved.\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport '@gooddata/react-components/styles/css/main.css';\n\nimport { ColumnChart } from '@gooddata/react-components';\nimport { BarChart } from '@gooddata/react-components';\nimport { AreaChart } from '@gooddata/react-components';\n\n\n\nconst grossProfitMeasure = '/gdc/md/xms7ga4tf3g3nzucd8380o2bev8oeknp/obj/6877';\nconst dateAttributeInMonths = '/gdc/md/xms7ga4tf3g3nzucd8380o2bev8oeknp/obj/2142';\nconst dateAttribute = '/gdc/md/xms7ga4tf3g3nzucd8380o2bev8oeknp/obj/2180';\n\nclass App extends Component {\n    constructor(){\n        super ()\n        this.state ={defaultValue:\"1\", defaultYear:\"2015\", defaultChart:ColumnChart}\n        this.handleMonth = this.handleMonth.bind(this)\n        this.handleYear =this.handleYear.bind(this)\n        this.handleChart =this.handleChart.bind(this)\n    }\n\n\n    handleMonth(event){\n        const value= event.target.value\n        this.setState({defaultValue: value})\n        \n    }\n\n    handleYear(event){\n        const value =event.target.value\n        this.setState({defaultYear: value})\n    }\n\n    handleChart(event){\n        const value =event.target.value\n        switch (value){\n            case \"ColumnChart\": \n                this.setState({defaultChart:ColumnChart});\n                 break;\n            case \"BarChart\": \n                this.setState({defaultChart:BarChart});\n                break;\n            case \"AreaChart\": \n                this.setState({defaultChart:AreaChart})\n                break;\n\n        }\n       \n\n    }\n\n\n\n    getMonthFilter() {\n        return {\n            absoluteDateFilter: {\n                dataSet: {\n                    uri: dateAttribute\n                },\n                from: this.state.defaultYear +'-' +this.state.defaultValue+'-01',\n                to: this.state.defaultYear + '-' +this.state.defaultValue+'-31'\n            }\n\n        }\n    }\n\n    getMeasures() {\n        return [\n            {\n                measure: {\n                    localIdentifier: 'm1',\n                    definition: {\n                        measureDefinition: {\n                            item: {\n                                uri: grossProfitMeasure\n                            }\n                        }\n                    },\n                    alias: '$ Gross Profit'\n                }\n            }\n        ]\n    }\n\n    getViewBy() {\n        return {\n            visualizationAttribute:\n            {\n                displayForm: {\n                    uri: dateAttributeInMonths\n                },\n                localIdentifier: 'a1'\n            }\n        }\n    }\n\n    renderDropdown() {\n        return (\n            <select defaultValue={this.state.defaultValue} onChange={this.handleMonth} className=\"monthSelector\">\n                <option value=\"1\">January</option>\n                <option value=\"2\">February</option>\n                <option value=\"3\">March</option>\n                <option value=\"4\">April</option>\n                <option value=\"5\">May</option>\n                <option value=\"6\">June</option>\n                <option value=\"7\">July</option>\n                <option value=\"8\">August</option>\n                <option value=\"9\">September</option>\n                <option value=\"10\">October</option>\n                <option value=\"11\">November</option>\n                <option value=\"12\">December</option>\n            </select>\n        )\n    }\n\n\n\n    renderYear() {\n        return (\n            <select defaultYear={this.state.defaultYear} onChange={this.handleYear}>\n                <option value=\"2015\">2015</option>\n                <option value=\"2016\">2016</option>\n                <option value=\"2017\">2017</option>\n            </select>\n        )\n    }\n\n\n    renderChartType() {\n        return (\n            <select defaultYear={this.state.defaultChart} onChange={this.handleChart}>\n                <option value=\"ColumnChart\">Column Chart</option>\n                <option value=\"BarChart\">Bar Chart</option>\n                <option value=\"AreaChart\">Area Chart</option>\n            </select>\n        )\n\n    }\n\n\n\n\n    render() {\n        const projectId = 'xms7ga4tf3g3nzucd8380o2bev8oeknp';\n        const filters = [this.getMonthFilter()];\n        const measures = this.getMeasures();\n        const viewBy = this.getViewBy();\n     \n\n        return (\n            <div className=\"App\">\n                <h1>$ Gross Profit in month {this.renderDropdown()} {this.renderYear()} {this.renderChartType()}</h1>\n                <div className=\"chart\">\n                    <this.state.defaultChart\n                        measures={measures}\n                        filters={filters}\n                        projectId={projectId}\n                    />\n                </div>\n                <h1>$ Gross Profit - All months</h1>\n                <div className=\"chart\">\n                    <this.state.defaultChart\n                        measures={measures}\n                        viewBy={viewBy}\n                        projectId={projectId}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// Copyright (C) 2007-2019, GoodData(R) Corporation. All rights reserved.\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Copyright (C) 2007-2019, GoodData(R) Corporation. All rights reserved.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}